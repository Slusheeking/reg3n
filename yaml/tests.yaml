# Tests Configuration for reg3n Trading System
# Configuration for testing framework, test data, and test execution

# Test Framework Configuration
framework:
  test_runner: "pytest"
  parallel_execution: true
  max_workers: 4
  timeout: 300  # seconds per test
  
  # Test Discovery
  discovery:
    patterns: ["test_*.py", "*_test.py"]
    directories: ["tests/"]
    ignore_patterns: ["__pycache__", "*.pyc"]
    
  # Test Reporting
  reporting:
    format: "junit"  # junit, html, json, tap
    output_dir: "test_reports"
    coverage_report: true
    coverage_threshold: 80  # minimum coverage percentage
    
# Test Data Configuration
test_data:
  # Mock Data Generation
  mock_data:
    enabled: true
    seed: 42  # for reproducible tests
    
    # Market Data Mocks
    market_data:
      symbols: ["AAPL", "MSFT", "GOOGL", "TSLA", "SPY", "VIX"]
      price_range: [10, 500]
      volume_range: [100000, 50000000]
      days_of_data: 252  # 1 trading year
      
    # Trading Data Mocks
    trading_data:
      account_balance: 100000
      positions: 5
      orders: 20
      
  # Test Fixtures
  fixtures:
    data_dir: "tests/fixtures"
    load_real_data: false  # Use real data for integration tests
    cache_fixtures: true
    
# Unit Tests Configuration
unit_tests:
  enabled: true
  
  # Data Pipeline Tests
  data_pipeline:
    test_polygon_websocket: true
    test_polygon_rest_api: true
    test_data_validation: true
    test_symbol_management: true
    
  # Trading Pipeline Tests
  trading_pipeline:
    test_alpaca_websocket: true
    test_alpaca_rest_api: true
    test_order_management: true
    test_position_management: true
    test_risk_management: true
    
  # ML Models Tests
  ml_models:
    test_feature_engineering: true
    test_model_training: true
    test_model_serving: true
    test_ensemble_manager: true
    test_online_learning: true
    
  # Filters Tests
  filters:
    test_adaptive_filter: true
    test_momentum_filter: true
    test_vix_scaler: true
    test_entry_timing: true
    
  # Utils Tests
  utils:
    test_logging: true
    test_error_handling: true
    test_performance_monitoring: true
    test_caching: true

# Integration Tests Configuration
integration_tests:
  enabled: true
  
  # End-to-End Workflows
  workflows:
    test_data_to_ml_pipeline: true
    test_ml_to_trading_pipeline: true
    test_full_trading_cycle: true
    test_error_recovery: true
    
  # External API Tests
  external_apis:
    test_polygon_api: true
    test_alpaca_api: true
    mock_external_calls: true  # Use mocks instead of real API calls
    
  # Database Tests
  database:
    test_connection: true
    test_crud_operations: true
    test_transactions: true
    use_test_database: true

# Performance Tests Configuration
performance_tests:
  enabled: true
  
  # Load Testing
  load_testing:
    max_concurrent_users: 100
    ramp_up_time: 60  # seconds
    test_duration: 300  # seconds
    
  # Stress Testing
  stress_testing:
    data_volume_multiplier: 10
    memory_limit_test: true
    cpu_limit_test: true
    
  # Latency Testing
  latency_testing:
    target_latency_ms: 100
    percentile_targets:
      p50: 50
      p95: 100
      p99: 200

# Test Environment Configuration
environment:
  # Test Database
  database:
    type: "sqlite"  # sqlite, postgresql, mysql
    url: "sqlite:///test.db"
    reset_between_tests: true
    
  # Test APIs
  apis:
    use_sandbox: true
    mock_responses: true
    rate_limit_testing: false
    
  # Test Logging
  logging:
    level: "DEBUG"
    capture_logs: true
    log_file: "tests/test.log"

# Test Automation Configuration
automation:
  # Continuous Integration
  ci:
    run_on_commit: true
    run_on_pull_request: true
    fail_fast: false
    
  # Scheduled Tests
  scheduled:
    nightly_tests: true
    weekly_performance_tests: true
    monthly_integration_tests: true
    
  # Test Notifications
  notifications:
    on_failure: true
    on_success: false
    channels: ["email", "slack"]

# Test Quality Configuration
quality:
  # Code Coverage
  coverage:
    minimum_threshold: 80
    fail_under_threshold: true
    exclude_patterns: ["tests/*", "*/migrations/*"]
    
  # Test Quality Metrics
  metrics:
    test_execution_time: true
    test_flakiness: true
    test_reliability: true
    
  # Mutation Testing
  mutation_testing:
    enabled: false  # Enable for thorough test quality assessment
    mutation_score_threshold: 75

# Mock Configuration
mocking:
  # External Services
  external_services:
    polygon_api: true
    alpaca_api: true
    database: false  # Use real test database
    
  # Mock Responses
  responses:
    realistic_delays: true
    error_simulation: true
    rate_limit_simulation: true
    
# Test Data Management
data_management:
  # Test Data Cleanup
  cleanup:
    after_each_test: true
    after_test_suite: true
    keep_failed_test_data: true
    
  # Test Data Versioning
  versioning:
    enabled: true
    version_control: "git"
    backup_test_data: true

# Security Testing
security:
  enabled: true
  
  # API Security Tests
  api_security:
    test_authentication: true
    test_authorization: true
    test_input_validation: true
    test_rate_limiting: true
    
  # Data Security Tests
  data_security:
    test_encryption: true
    test_data_masking: true
    test_access_controls: true

# Debugging Configuration
debugging:
  # Test Debugging
  debug_mode: false
  verbose_output: false
  save_debug_artifacts: true
  
  # Failure Analysis
  failure_analysis:
    capture_screenshots: false  # For UI tests
    capture_logs: true
    capture_system_state: true