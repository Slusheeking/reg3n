# Unified Data Configuration for reg3n Trading System
# Configuration for Polygon WebSocket and REST API integration
#
# This YAML file provides configuration for data_pipeline/polygon_websocket.py
# Key mappings used in the Python code:
# - api.polygon.* -> PolygonWebSocketManager initialization
# - health_monitoring.* -> ConnectionHealthMonitor and reconnection logic
# - rate_limiting.min_request_interval -> Rate limiting in WebSocket manager
# - data_processing.validation.* -> DataValidator class
# - data_processing.symbols.* -> SymbolManager class
# - data_processing.storage.* -> Subscription management
# - a100_optimizations.* -> Performance optimizations

# API Configuration
api:
  polygon:
    base_url: "https://api.polygon.io"
    websocket_url: "wss://socket.polygon.io/stocks"
    feed_type: "delayed"  # or "real-time" for live data
    timeout: 15
    max_retries: 5
    
  alpaca:
    base_url: "https://paper-api.alpaca.markets"  # Paper trading
    websocket_url: "wss://stream.data.alpaca.markets/v2"
    environment: "paper"  # paper or live

# Rate Limiting & Performance (A100 Optimized)
rate_limiting:
  requests_per_minute: 5000
  requests_per_second: 100
  websocket_subscriptions_per_batch: 1000  # A100 optimized - increased from 100
  rest_batch_size: 50
  min_request_interval: 0.01  # 10ms minimum between requests (used by PolygonWebSocketManager)
  heartbeat_interval: 30

# Data Processing Configuration
data_processing:
  # Symbol Management (used by SymbolManager)
  symbols:
    fetch_all: true  # Fetch ALL symbols (A100 can handle it) - used by SymbolManager
    auto_filter: false  # No filtering - process everything - used by SymbolManager
    batch_processing: true  # Used by SymbolManager
    max_symbols: null  # No limit for A100 - used by SymbolManager
    
  # Data Validation (used by DataValidator)
  validation:
    enabled: true  # Used by DataValidator
    price_range:  # Used by DataValidator.sanitize_price()
      min: 0.01
      max: 1000000
    volume_range:  # Used by DataValidator.sanitize_volume()
      min: 0
      max: 1000000000
    
  # Data Storage (used by PolygonWebSocketManager._subscribe_to_symbols)
  storage:
    buffer_size: 1000  # Per symbol
    enable_trades: true  # Used to determine T.* subscriptions
    enable_quotes: true  # Used to determine Q.* subscriptions
    enable_aggregates: false
    retention_minutes: 60

# Connection Health Monitoring
health_monitoring:
  enabled: true
  heartbeat_interval: 30  # Used by ConnectionHealthMonitor
  max_reconnect_attempts: 10  # Used by PolygonWebSocketManager
  reconnect_backoff_base: 1.0  # Used by PolygonWebSocketManager
  reconnect_backoff_max: 60.0  # Used by PolygonWebSocketManager
  data_timeout_seconds: 60  # Used by ConnectionHealthMonitor
  
# Error Handling
error_handling:
  unified_logging: true
  log_level: "INFO"
  retry_on_errors:
    - 429  # Rate limit
    - 500  # Internal server error
    - 502  # Bad gateway
    - 503  # Service unavailable
    - 504  # Gateway timeout
  
  error_callbacks:
    enabled: true
    max_error_rate: 0.1  # 10% error rate threshold

# Data Synchronization
synchronization:
  enabled: true
  websocket_rest_sync: true
  data_consistency_checks: true
  timestamp_tolerance_ms: 1000

# A100 Specific Optimizations (used by SymbolManager and PolygonWebSocketManager)
a100_optimizations:
  enabled: true  # Used by SymbolManager and PolygonWebSocketManager
  parallel_processing: true
  gpu_acceleration: false  # For future ML model integration
  memory_optimization: true
  batch_size_multiplier: 10  # 10x larger batches than standard - used by SymbolManager
  
# Feature Engineering (for future ML model)
feature_engineering:
  enabled: false  # Will be enabled when ML model is integrated
  features:
    price_features: 6
    volume_features: 4
    technical_indicators: 8
    market_context: 4
    cross_asset_signals: 3
  
# Trading Strategy Integration
strategy:
  unified_model: true
  prediction_timeout_ms: 1
  feature_extraction_timeout_ms: 0.5
  decision_timeout_ms: 2
  
# Endpoints Configuration
endpoints:
  # Market Data
  market_data:
    - market_status
    - single_snapshot
    - market_movers
    - full_market_snapshot
    - vix_data
    - market_breadth_data
    
  # Historical Data
  historical_data:
    - aggregates
    - previous_close
    - grouped_daily_aggs
    - last_trade
    - last_quote
    
  # News & Reference
  news_reference:
    - ticker_news
    - market_news
    - ticker_details
    
  # Financials
  financials:
    - ticker_financials
    - dividends
    - stock_splits
    - stock_splits_history
    
  # WebSocket Streams
  websocket_streams:
    - trades  # T.*
    - quotes  # Q.*
    
# Logging Configuration
logging:
  enabled: true  # Master switch to enable/disable all logging
  level: "INFO"
  format: "%(asctime)s - %(levelname)s - %(name)s - %(message)s"
  file_logging: true
  console_logging: true
  colored_output: true  # Enable colored console output
  log_rotation: true
  max_log_size_mb: 100
  backup_count: 5
  
  # Component-specific logging controls
  components:
    websocket: true
    rest_api: true
    trading: true
    system: true
    data_processing: true
    health_monitoring: true

# Performance Metrics
metrics:
  enabled: true
  track_latency: true
  track_throughput: true
  track_error_rates: true
  track_connection_health: true
  export_prometheus: false  # For future monitoring integration